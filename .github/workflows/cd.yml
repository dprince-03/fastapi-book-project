# name: CD Pipeline

# on:
#   push:
#     branches:
#       - main

# jobs:
#   deploy:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v3

#       - name: Set up Python
#         uses: actions/setup-python@v4
#         with:
#           python-version: "3.12"

#       - name: Install dependencies
#         run: |
#           python -m pip install --upgrade pip
#           pip install -r requirements.txt

#       - name: Deploy to Render
#         env:
#           RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
#           RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}  # Add this line
#         run: |
#           curl -s "https://api.render.com/v1/services/$RENDER_SERVICE_ID/deploys" \
#             -H "Authorization: Bearer $RENDER_API_KEY" \
#             -H "Content-Type: application/json" \
#             -X POST


name: CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"  

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Deploy to AWS EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_EC2_HOST }}  # Public IP of your EC2 instance
          username: ubuntu  # Default username for Ubuntu EC2 instances
          key: ${{ secrets.AWS_EC2_SSH_KEY }}  # Private SSH key for EC2 access
          script: |
            cd /home/ubuntu/fastapi-book-project 
            git pull origin main
            pip install -r requirements.txt
            sudo systemctl restart nginx
            sudo systemctl restart fastapi  